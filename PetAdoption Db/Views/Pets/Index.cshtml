@model PaginatedList<PetAdoption_Db.Models.Pet>

@{
    ViewData["Pets"] = "Pets";
}

<style>
    .edit-button {
        max-width: 13px;
        max-height: 13px;
    }

    .details-button {
        max-height: 13px;
        max-width: 13px;
    }

    .delete-button {
        max-height: 13px;
        max-width: 13px;
    }
</style>

<h1>Pets</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            <input type="text" name="SearchString" value="@ViewData["PetFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Name</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["BreedSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Breed</a>
            </th>
            <th>
                Age
            </th>
            <th>
                Sex
            </th>
            <th>
                Description
            </th>
            <th>
                Shelter
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Breed)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Age)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Sex)
            </td>
            <td class="description">
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Shelter.ShelterId)
            </td>
            <td>
                    <a asp-action="Edit" asp-route-id="@item.PetId"><img class="edit-button" src="https://www.svgrepo.com/show/146083/pencil-edit-button.svg" alt="Alternate Text"/></a> |
                    <a asp-action="Details" asp-route-id="@item.PetId"><img class="details-button" src="https://uxwing.com/wp-content/themes/uxwing/download/file-and-folder-type/paper-icon.png" alt="Alternate Text" /></a> |
                    <a asp-action="Delete" asp-route-id="@item.PetId"><img class="delete-button" src="https://cdn3.iconfinder.com/data/icons/linecons-free-vector-icons-pack/32/trash-512.png" alt="Alternate Text" /></a>
            </td>
        </tr>
}
    </tbody>
</table>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>
